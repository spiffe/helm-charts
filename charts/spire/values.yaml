# You can enable config/features that affect all services here.
global:
  k8s:
    # -- This is the value of your clusters `kubeadm init --service-dns-domain` flag
    clusterDomain: cluster.local
  spire:
    # -- The name of the Kubernetes cluster (`kubeadm init --service-dns-domain`)
    clusterName: example-cluster
    # -- The trust domain to be used for the SPIFFE identifiers
    trustDomain: example.org
    # -- Set the jwt issuer
    jwtIssuer: https://oidc-discovery.example.org
    # -- Override all instances of bundleConfigMap
    bundleConfigMap: ""

    # -- Set what address to use for the upstream server when using nested spire
    upstreamServerAddress: ""

    image:
      # -- Override all Spire image registries at once
      registry: ""

  installAndUpgradeHooks:
    # -- Enable Helm hooks to autofix common install/upgrade issues (should be disabled when using `helm template`)
    enabled: true
  deleteHooks:
    # -- Enable Helm hooks to autofix common delete issues (should be disabled when using `helm template`)
    enabled: true

#  telemetry:
#    prometheus:
#      enabled: true
#      podMonitor:
#        enabled: true
#        # -- Allows to install the PodMonitor in another namespace then the spire components are installed into.
#        namespace: "kube-prometheus-system"
#        labels: {}

# subcharts
spire-server:
  # -- Enables deployment of SPIRE Server
  enabled: true
  nameOverride: server

  controllerManager:
    # -- Enables deployment of Controller Manager
    enabled: true

spire-agent:
  # -- Enables deployment of SPIRE Agent(s)
  enabled: true
  nameOverride: agent

upstream:
  # -- enable upstream agent and driver for use with nested spire.
  enabled: false

upstream-spire-agent:
  # @ignored
  upstream: true
  nameOverride: agent-upstream
  bundleConfigMap: spire-bundle-upstream

  socketPath: /run/spire/agent-sockets-upstream/spire-agent.sock
  serviceAccount:
    name: spire-agent-upstream
  healthChecks:
    port: 9981
  telemetry:
    prometheus:
      port: 9989

spiffe-csi-driver:
  # -- Enables deployment of CSI driver
  enabled: true

upstream-spiffe-csi-driver:
  pluginName: upstream.csi.spiffe.io
  agentSocketPath: /run/spire/agent-sockets-upstream/spire-agent.sock
  healthChecks:
    port: 9810

spiffe-oidc-discovery-provider:
  # -- Enables deployment of OIDC discovery provider
  enabled: false

tornjak-frontend:
  # -- Enables deployment of Tornjak frontend/UI (Not for production)
  enabled: false
